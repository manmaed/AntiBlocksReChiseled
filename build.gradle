plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.57'
    id "me.modmuss50.mod-publish-plugin" version "0.4.5"
}

def ENV = System.getenv()
version = "${ENV.GITHUB_RUN_NUMBER}" ? "${mod_version}.${ENV.GITHUB_RUN_NUMBER}" : "${mod_version}.nobuildnumber"
group = project.maven_group

repositories {
    mavenLocal()
    maven {
        url "https://maven.curse.tools"
    }
}

base {
    archivesName = project.archives_base_name + "-neo"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.archives_base_name
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.archives_base_name
        programArgument '--nogui'
    }

    data {
        programArguments.addAll '--mod', project.archives_base_name, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { 
    srcDir 'src/generated/resources'
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation "curse.maven:fusion-connected-textures-${fusion_id}:${fusion_fileid}"
    //implementation "curse.maven:ctm-${ctm_id}:${ctm_file_id}"

}
/*tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            version: version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}*/

publishMods {
    dryRun = (providers.environmentVariable("CURSE_DEPLOY").getOrNull() || providers.environmentVariable("MODRINTH_DEPLOY").getOrNull()) == null
    file = jar.archiveFile
    modLoaders.add("neoforge")
    type = BETA
    changelog = "changeme"
    displayName = "${mod_name} v${project.version} - NeoForge - ${minecraft_version}"
    curseforge {
        accessToken = providers.environmentVariable("CURSE_DEPLOY")
        projectId = project.curseforge_id
        minecraftVersions.add("Java 17")
        minecraftVersions.add("${minecraft_version}")
    }
    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_DEPLOY")
        projectId  = "${modrinth_id}"
        minecraftVersions.add("${minecraft_version}")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}