plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id "me.modmuss50.mod-publish-plugin" version "0.4.5"
}

def ENV = System.getenv()
version = "${ENV.GITHUB_RUN_NUMBER}" ? "${mod_version}.${ENV.GITHUB_RUN_NUMBER}" : "${mod_version}.nobuildnumber"
group = project.maven_group

base {
    archivesName = project.archives_base_name + "-forge"
}

// Mojang ships Java 21 to end users in 1.20.5+, so your mod should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "${minecraft_mappings}", version: "${minecraft_version}"
    reobf = false
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            property 'forge.enabledGameTestNamespaces', archives_base_name
        }

        server {
            property 'forge.enabledGameTestNamespaces', archives_base_name
            args '--nogui'
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', archives_base_name, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        url "https://maven.curse.tools"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
    //implementation fg.deobf("curse.maven:ctm-${ctm_id}:${ctm_file_id}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "antiblocksrechiseled",
                "Specification-Vendor"    : "manmaed",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "manmaed",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            version: version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

publishMods {
    dryRun = (providers.environmentVariable("CURSE_DEPLOY").getOrNull() || providers.environmentVariable("MODRINTH_DEPLOY").getOrNull()) == null
    file = jar.archiveFile
    modLoaders.add("forge")
    type = BETA
    changelog = "changeme"
    displayName = "${mod_name} v${project.version} - Forge - ${minecraft_version}"
    curseforge {
        accessToken = providers.environmentVariable("CURSE_DEPLOY")
        projectId = project.curseforge_id
        minecraftVersions.add("Java 17")
        minecraftVersions.add("${minecraft_version}")
    }
    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_DEPLOY")
        projectId  = project.modrinth_id
        minecraftVersions.add("${minecraft_version}")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}