plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id "me.modmuss50.mod-publish-plugin" version "0.4.5"
}

repositories {
    maven {
        url "https://maven.curse.tools"
    }
}
def ENV = System.getenv()
version = "${ENV.GITHUB_RUN_NUMBER}" ? "${mod_version}.${ENV.GITHUB_RUN_NUMBER}" : "${mod_version}.nobuildnumber"
group = project.maven_group
base {
    archivesBaseName = project.archives_base_name + "-forge"
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "${minecraft_mappings}", version: "${minecraft_version}"
    copyIdeResources = true
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'antiblocksrechiseled'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                antiblocksrechiseled {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'antiblocksrechiseled'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                antiblocksrechiseled {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'antiblocksrechiseled'
            mods {
                antiblocksrechiseled {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'antiblocksrechiseled', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                antiblocksrechiseled {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //implementation fg.deobf("curse.maven:ctm-${ctm_id}:${ctm_file_id}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "antiblocksrechiseled",
                "Specification-Vendor"    : "manmaed",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "manmaed",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

publishMods {
    dryRun = (providers.environmentVariable("CURSE_DEPLOY").getOrNull() || providers.environmentVariable("MODRINTH_DEPLOY").getOrNull()) == null
    file = jar.archiveFile
    modLoaders.add("forge")
    type = BETA
    changelog = "changeme"
    displayName = "${mod_name} v${project.version} - Forge - ${minecraft_version}"
    curseforge {
        accessToken = providers.environmentVariable("CURSE_DEPLOY")
        projectId = project.curseforge_id
        minecraftVersions.add("Java 17")
        minecraftVersions.add("${minecraft_version}")
        optional {
            slug = 'fusion-connected-textures'
        }
    }
    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_DEPLOY")
        projectId  = project.modrinth_id
        minecraftVersions.add("${minecraft_version}")
        optional {
            slug = 'fusion-connected-textures'
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
